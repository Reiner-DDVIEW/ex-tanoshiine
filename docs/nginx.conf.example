user www-data;
worker_processes 4;
pid /var/run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	upstream api {
	#Endpoint of the API server from config.js
		server 127.0.0.1:8002; # LISTEN_HOST from config.js
	}

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;



	server {
		listen 80;
		listen [::]:80;
		server_name localhost; # Domain/Local IP


		# return 301 https://$host$request_uri; ## HTTPS redirect

		root /path/to/tanoshiine/www;
		index index.html;
		client_max_body_size 30M;

		# These logins are created by: htpasswd -c /etc/nginx/.<ROLE>passwd <USERNAME>
		# Do without the -c flag after making the first user in the file

		location /login {
			auth_basic "Admin Login";
			auth_basic_user_file /etc/nginx/.adminpasswd;
			try_files $uri $uri/ @boards;
		}

		location /mod {
			auth_basic "Moderator Login";
			auth_basic_user_file /etc/nginx/.modpasswd;
			try_files $uri $uri/ @boards;
		}


		location = /robots.txt {}

		location /api/ {
			proxy_pass http://api/api/;
			proxy_request_buffering off;

			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# CloudFlare
			#proxy_set_header X-Forwarded-For $http_cf_connecting_ip;
		}

		location @boards {
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $remote_addr;
			proxy_set_header Host $http_host;
			proxy_set_header X-NginX-Proxy true;

			proxy_pass http://127.0.0.1:8000; # LISTEN_HOST and LISTEN_PORT from config.js
			proxy_redirect off;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}

		location /captcha/ {
			proxy_set_header X-Remote-IP $remote_addr;
			proxy_set_header X-Forwarded-For $remote_addr;
			proxy_set_header Host $http_host;
			proxy_set_header X-NginX-Proxy true;

			proxy_pass http://127.0.0.1:8512/; # Host and Port for captchoulli
			proxy_redirect off;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}
	}
}